- name: Upgrade hosts
  tags: update, package
  hosts: servers
  become: true
  tasks:
    - name: Upgrade hosts with APT
      tags: apt, debian
      when: ansible_facts['os_family'] == 'Debian'
      ansible.builtin.apt:
        upgrade: safe
        autoremove: true
        autoclean: true
        install_recommends: true
        update_cache: true
        state: latest

    - name: Upgrade hosts with DNF
      tags: dnf, redhat
      when: ansible_facts['os_family'] == 'RedHat'
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: true

    - name: Upgrade hosts with PACMAN
      tags: pacman, archlinux
      when: ansible_facts['os_family'] == 'Archlinux'
      community.general.pacman:
        upgrade: true
        update_cache: true

- name: Install & Start web service & PHP
  tags: web, php
  hosts: webservers
  become: true
  tasks:
    - name: Populate ansible facts with services
      tags: always, service_facts
      ansible.builtin.service_facts:

    - name: Open firewall ports
      tags: firewalld
      ansible.posix.firewalld:
        port: '{{ firewall_port }}'
        permanent: true
        immediate: true
        state: enabled
      when:
        - "'firewalld.service' in ansible_facts.services"

    - name: Install web server & PHP
      tags: install, package
      ansible.builtin.package:
        name: '{{ apache_pkg }}, {{ php_pkg }}'
        state: present

    - name: Start web server
      tags: start, service
      ansible.builtin.service:
        name: '{{ apache_service }}'
        enabled: true
        state: started

- name: Install & Start database service
  tags: database
  hosts: dbservers
  become: true
  tasks:
    - name: Install database package
      tags: install, package
      ansible.builtin.package:
        name: '{{ db_pkg }}'
        state: latest

    - name: Configure database service
      tags: configure, service
      ansible.builtin.command:
        cmd: '{{ cfg_cmd }}'
        creates: '{{ db_path }}'

    - name: Start database service
      tags: start, service
      ansible.builtin.service:
        name: '{{ db_service }}'
        enabled: true
        state: started

- name: Install & Start file service
  tags: files
  hosts: fileservers
  become: true
  tasks:
    - name: Install fileserver package
      tags: install, package
      ansible.builtin.package:
        name: '{{ fileserver_pkg }}'
        state: latest

    - name: Configure fileserver service
      tags: configure, service
      ansible.builtin.copy:
        mode: 0644
        owner: root
        group: root
        src: files/samba/smb.conf
        dest: '{{ dest_fileserver_conf }}'

    - name: Start fileserver service
      tags: start, service
      ansible.builtin.service:
        name: '{{ fileserver_service }}'
        enabled: true
        state: started
